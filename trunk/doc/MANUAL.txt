Geometric Analysis of Structural Variants (GASV)

Software for identifying and comparing structural variants by computing
intersections of breakpoint regions.

If you use GASV in your research, please cite: 
S. Sindi, E. Helman, A. Bashir, B.J. Raphael. A Geometric Approach for
Classification and Comparison of Structural Variants. Joint: 17th
Annual International Conference on Intelligent Systems in Molecular
Biology and 8th Annual International European Conference on
Computational Biology (ISMB/ECCB 09).  Bioinformatics 2009
25(12):i222-i230.

This product includes software developed by the Solution Engineering,
Inc. (http://www.seisw.com/).

Contact: Ben Raphael at gasv@cs.brown.edu

Version: 1.4.1
Version Date: May 25 2010

SUMMARY ==============================================

GASV currently supports four features: clustering a set of ESP's and
producing breakpoint regions, filtering paired-end sequences (ESP) by
a reference set, taking a set of ESP's and producing unclustered
breakpoint regions, and finding overlaps between array comparative
genomic hybridization (aCGH) data and clusters of ESP breakpoint
regions.

REQUIREMENTS =========================================
Requires: Perl, Java 5 (or higher), *nix OS
Tested with: Perl v5.10.0, Java 6, Linux 2.6.26

GASV FEATURES =========================================

(i) Cluster a set of ESP to obtain breakpoint regions for deletions,
inversions, and translocations.

         Usage: java -jar gasv.jar --cluster [Options] <input file>
         Note that "-c" can be substituted for "--cluster".

         Options described below.

         Output (GASV Breakpoint Region File Format described below):

         <input file>.clusters:	Connected components of pairwise overlapping
                                ESPs.

	(Not all may have common structural variant, refer to FILE 
	FORMATS and ISMB manuscript for more details.)


(ii) Filter a target set of ESP by a normal/reference set of ESP.
ESP listed in the target file will be compared to ESP in a reference
file for overlapping breakpoint regions.

         Usage: java -jar gasv.jar --filter [Options] <Reference Input 
File> <Target Input File>
	(GASV Input file format described below)
	Note that "-f" can be substituted for "--filter".

	Options described below.

	Output (in GASV Paired End Sequence (ESP) File Format, described
        below):

	<Target Input File>.removed:	ESPs overlapping an ESP in the 
					Reference File.

	<Target Input File>.retained:	ESP that do not overlap a breakpoint
					region defined ESPs in the Reference
					file.

(iii) Read in a set of ESP's and output a file containing the ESP's
represented as unclustered breakpoint regions.

         Usage: java -jar gasv.jar --nocluster [options] <InputFile>
         Note that "-n" can be substituted for "--nocluster".

         Options described below.

         Output (GASV Breakpoint Region File Format described below):
         <InputFile>.noclusters: The ESP represented as breakpoint
         regions (unclustered).

(iv) Cluster a set of ESP's to obtain breakpoint regions and then
output the overlaps of these regions with datapoints from a set of
aCGH data. In the default case, each line of <CGHFile> is interpreted
as a single CGH datapoint that can be considered a range in the x or y
directions. If the --paired option is specified, then each line is
paired with every other line to form paired data that is
representative of finite rectangles.

         Usage: java -jar gasv.jar --cgh [options] <ESPFile> <CGHFile>
         Note that "-g" can be substituted for "--cgh".

         Options described below.

         Output(CGH Overlaps Output File Format described below):
         <CGHFile>.cgh: A list of each CGH datapoint with all
         overlapping ESP clusters.

PREPARING INPUT FILES ==================================
The input file format is described below.  We also provide scripts to
convert output from Maq (.map files) and SAM/BAM files to the correct
format for GASV.  See BAM_preprocessor.txt and 
Maq_Processor_README.txt for details. 

OPTIONS ================================================
These options can be used with any mode of operation unless otherwise
stated below:

         --nohead		Output file will not have a header.

         --outputdir <dir>	Directory into which output file will 
				be placed

         --verbose		Prints extra info to std out

         --debug		Run program in debug mode

         --fast			Makes GASV run faster, but risks OutOfMemory
				errors

         --batch		Input file(s) are GASV Batch Files
				(*.in files listing ESP files),
				rather than the ESP file(s) themselves.
				The --lmin and --lmax options are
				ignored if --batch is specified.

         --lmin <val>		Specify integer value to use for Lmin
				variable. Default value used otherwise. Ignored
				if the --batch option is specified.

         --lmax <val>		Specify integer value to use for Lmax variable.
				Default value used otherwise. Ignored if the 
				--batch option is specified.

         --lmin2 <val>		Ignored unless in --filter mode. In
				filter mode, --lmin specifies Lmin for Reference
				Input File and lmin2 specifies Lmin for the
				Target Input File. Also ignored if batch is
				specified.

         --lmax2 <val>		Ignored unless in --filter mode. In
				filter mode, --lmax specifies Lmax for Reference
				Input File and lmax2 specifies LMAX for the
				Target Input File. Also ignored if batch is 
				specified.

         --paired		Ignored unless in --cgh mode. This option
				specifies that every line of input in the CGH
				file is paired with every other line, to form
				two dimensional data which can be
				represented as finite rectangles.

         --split		Ignored unless in --cluster mode. This option
				specifies that candidate split reads are output
				for each cluster as an additional output column.
				The --readlength option must be specified.

         --readlength <val>	The length of each read. Required for --split
				mode.

         --minClusterSize <val>	Ignored unless in --cluster or --cgh
				mode. If this option is specified, then only
				those clusters with at least <val> supporting
				ESP's are reported.

         --maxClusterSize <val>	Ignored unless in --cluster or --cgh mode. If
				this option is specified, then only those
				clusters with at most <val> supporting ESPs are
				reported.

         -- maxCliqueSize <val>	Ignored unless in --cluster or --cgh mode. For
				clusters with greater than <val> paired end
                                sequences, calculation of maximal sub clusters
                                is performed.
                               	Also only at most <val> ESP names will be
				output per cluster (though numESP column will
                                still reflect real number of ESPs).
                                Localization for such clusters is always -1.

         --maxPairedEndsPerWin <val>     Ignored unless in --cluster or --cgh
				mode. Also does not apply if --fast otion used.
				If more than <val> paired end sequences are
				found in the current window, any extra
				paired end sequences are discarded.

         --maximal		Ignored unless in --cluster mode.  If
                                this option is specified, then for each
                                connected component without a common
                                intersection (localization reported as
                                -1), the maximal sub-clusters (each
                                with a common intersection) will be 
				reported

         --numChrom <val>	Specify number of chromosomes in the 
				genome. Default is 24.

         --output <mode>	Specify the GASV cluster output mode.

                                standard	Default output mode (see FILE
						FORMATS)
                                reads		Default mode and names of
						supporting fragments
                                regions		Detailed mode with region
                                                coordinates and fragment names

	 --nonreciprocal 	Only ESP's with exact matching orientations 
				will be clustered together.  E.g. +/+ and 
				-/- inversion ESP's will be segregated into 
				separate clusters.


FILE FORMATS ================================================

NOTE: In each of the following file formats, lines beginning with "#"
are considered comments and ignored. In addition, the first line of
each output file is a header line (beginning with "#"), unless the
--nohead option is specified.

IMPORTANT PRE-PROCESSING STEP:

Both ESP and aCGH files must be sorted in order according to
chromosome and genomic coordinate. Before running GASV you should run
the respective sorting script;

ESP FIle: sortESP.bash

aCGH Files: sortCGH.bash

Example: ./sortESP.bash espFileToSort

Note: If your ESP files were created with BAM_preprocessor.pl, the files
are already in the correct order.

===========================

(I) GASV ESP (paired end sequence) File Format

ESP (paired end sequence) files are used for input of mapped
paired-end sequences.  They are also output by the --filter mode.
(See above)

***ESP files MUST BE SORTED prior to running GASV with ./sortESP.bash***

Each line gives the mapping information for a ESP.  Columns are
tab-separated in the following format:

Name:                   A string with a unique ESP identifier.

Left Chromosome:        The chromosome where the left read mapped.
                        (Acceptable formats: CHR1, chr1, 1, X, chrX, chrY)

Left Mapped Start:      The coordinate of the start of the left read.

Left Mapped End:        The coordinate of the end of the left read.

Left End Orientation:   The orientation of the left read. (Acceptable
                        formats: include +/-, Plus/Minus)

Right Chromosome:       Chromosome where the right read mapped.

Right Mapped Start:     Coordinate of the start of the right read.

Right Mapped End:       Coordinate of the end of the right read.

Right End Orientation:  The orientation of the right read.

NOTE: Since mapped start and end are in terms of the reference
sequence, Start < End.


For example:
ESP_A       1       146590306       146591106       +       1
146630713  146631513       +
ESP_B       2       46590283       46591083       +       1
146630714  146631514       +
ESP_B       2       46590283       46591083       +       1
156630714  156631514       +
ESP_C       X       146586311       146587111       +       1
146633908  146634708       +


(II) GASV Batch File Format (*.in files):
The GASV Batch input files provide a list of the ESP or CGH file(s) to
be processed.   As mentioned elsewhere, each of the ESP and CGH files
must be sorted by chromosome and genomic coordinates. The script
./sortESP.bash should be used to sort files prior to running GASV.

In addition, the files listed in a *.in file must also be "globally"
sorted, in the sense that earlier files listed must contain the data 
for the
lower-numbered chromosomes and the files closer to the bottom of the
list should contain the higher-numbered chromosomes. E.g. If two files
are listed, and the first file contains data from chromosomes 1, 2, 3,
and 4, then no data from chromosomes 1, 2, or 3 should be in the
second file.

For ESP files, each line gives the name of a ESP file, the word "ESP"
to indicate the file type, and the minimum (Lmin) and maximum (Lmax)
fragment length for ESP in the file.  Columns are tab-separated in the
following format:

FILE    ESP     Lmin    Lmax

For CGH files, each line gives the name of a CGH file, and the word
"CGH" to indicate the file type.

Columns are tab-separated in the following format:

FILE    CGH

(III) GASV Structural Variation Output File Format (*.clusters and
*.noclusters files):

The *.clusters files are produced by the --cluster mode of operation.
The *.noclusters files are produced by the --nocluster mode of
operation.

Each line is a list of ESP with overlapping breakpoint regions.
Columns are tab-separated in the following format:

#Cluster_ID:            Unique text identifier for the cluster
                         c<cluster_number>. In --maximal mode, the
                         sub-clusters are named as in:
                         c[MajorClusterNumber].[MinorSubclusterNumber]

LeftChr:                Chromosome containing the left breakpoint.

LeftBreakPoint:         Interval containing the left breakpoint.

RightChr:               Chromosome containing the right breakpoint.
			(Except for translocations LeftChr = RightChr).

RightBreakPoint:        Interval containing the right breakpoint.

Num PES:                Number of ESPs that support this variant.

Localization:           Square root of the breakpoint region (polygon of
                        intersection). The smaller the localization, the more
                        precisely the breakpoint can be determined. See NOTE
                        below for more information.

Type:                   The type of structural variant indicated

                         D =     Deletion
                         IR =    Reciprocal Inversion (both ++ and --)
                         I+ =    Inversion (++ side only)
                         I- =    Inversion (-- side only)
                         T =     Translocation
                         TR =  	 "Classic" Reciprocal Translocation 
				 (both +- and -+)
                         TO =  	 "Robertsonian" Reciprocal Translocation 
				 (both ++ and --)
                         TNR+ =  "Classic" Non-Reciprocal Translocation 
                                 (+- only) 
                         TNR- =  "Classic" Non-Reciprocal Translocation 
                                 (-+ only) 
                         TNO+ =  "Robertsonian" Non-Reciprocal Translocation 
                                 (++ only)
                         TNO- =  "Robertsonian" Non-Reciprocal Translocation 
                                 (-- only)
                         V =     Divergent
                         DV =    Combination divergent and deletion ESPs

Example Clusters File:

#Cluster_ID:    LeftChr:        LeftBreakPoint: RightChr:       
RightBreakPoint:        Num
PES:    Localization:   Type:
c521    17      40566182,40566330       17      
40567335,40567463       4       86.4    IR

Additional Output Options with --output <val>:

reads:                  Adds an additional column listing the names
                         of ESPs in the cluster

regions:                Detailed output specifying the coordinates
                         of the breakpoint polygon. In addition, the
                        columns specified are:
                        #Cluster_ID:	Num PES:	Localization:	
			Type:	List of PES:	 LeftChr:	RightChr:
			Boundary Points:

Note: The "--output regions" mode closely matches the output from 
release 1.2, except for the new "Type:" field, which is common to all 
three output modes. 

Split Reads:

In addition, if the --split option is specified in conjunction with
the --cluster mode, then an additional column is output

Candidate Split Reads:  List of candidate split reads which may
                         contain one of the breakpoints associated with
                         this cluster. Reads are identified by the
                         format [B|X|Y]**PairedReadName.  So for
                         example, X**2B421_002_A11 would indicate that
                         the first read in the pair named
                         "2B421_002_A11" is a candidate split read.
                         By contrast, a leading "Y" would indicates
                         that the second read pair is a candidate split
                         read, while a leading "B" would indicate that
                         both reads of the "2B421_002_A11" pair are
                         candidate split reads.

*NOTE: If the localization is equal to -1, this means that while a set
of ESPs overlap, there is not a single structural variant that can
explain the data. Running GASV with the "--maximal" flag will output
all maximal structural variant predictions from such a cluster.

For examples and more information on maximality, and localization
refer to our ISMB manuscript.

(IV) GASV CGH ([array] Comparative Genomic Hybridization) File Format

CGH files are used for input of unpaired array comparative genomic
hybridization data.

***CGH files MUST BE SORTED prior to running GASV with ./sortCGH.bash***

Each line gives the probe information for an aCGH datapoint. With the
--paired option, each CGH datapoint is automatically paired up with
every other CGH datapoint in order to form "finite rectangles" with
which to test for intersection with clusters ESP's.

Columns are tab-separated in the following format:

Probe1 Name:            Name of the first probe (probe with smaller 
			genomic coordinate).

Probe2 Name:            Name of the second probe (probe with larger 
			genomic coordinate).

Chromosome:             The chromosome to which the probes were 
			hybridized.

Probe1 Coordinate:      The genomic coordinate of the first probe.

Probe2 Coordinate:      The genomic coordinate of the second probe.

For example:
bp1_start       bp1_end 1       7749320 7759362
bp3_start       bp3_end 1       7849320 7859362
bp148_start     bp148_end       2       87178811        87229587
bp73_start      bp73_end        15      80451435        81011066
bp174_start     bp174_end       22      44540211        44553104

Note: This mode can also be used to determine candidate fusion genes.
Here Probe1 Coordinate and Probe2 Coordinate are the start and end
coordinates of the gene, respectively.

(V) GASV CGH Overlaps File Format (*.cgh files):

The *.cgh files are produced by the --cgh mode of operation.

Each line indicates an aCGH datapoint along with a list of overlapping
ESP breakpoint regions.

Columns are tab-separated in the following format:


CGH ID:                 Unique text identifier for the CGH datapoint in the
                        format Probe1Name_Probe2Name for single CGH
                        or Probe1Name_Probe2Name_Probe3Name_Probe4Name for
                        paired CGH

Chr1:                   Chromosome number of the single CGH datapoint 
			or of the first CGH datapoint in a pair

Chr2:                   Chromosome number of the single CGH datapoint 
			(same as Chr1) or of the second CGH datapoint in a pair

Num Clusters:           Number of ESP clusters that overlap with this 
			CGH break region.

Cluster List:           A comma-separated list of ESP Clusters overlapping
                        this CGH region, with the data for each individual
                        cluster enclosed within parentheses.  The data provided
			for each individual cluster is the same as that provided
                        for "--region" output format.

                        Each cluster has the following format:
                        (ClusterID:NumPES:Localization:List of
                        PES:ChrM:ChrN:Boundary Points)


Example:
#CGH_ID:   	       Chr1:  Chr2:  Num Clusters:   Cluster List(ClusterID:ChrM:ChrN:NumPES:Localization:List of PES:Boundary Points)
bp94_start_bp94_end	16	16	2	(c9:16:16:1:152906.1:2B421_010_P05:45022643,44990423,45177623,44990423,44949273,45218773,44949273,45063793),(c10:16:16:2:150765.1:2B421_009_P13,2B421_006_C07:44948517,45177607,44723052,44952142,44875208,44952142,44948517,45025451)
